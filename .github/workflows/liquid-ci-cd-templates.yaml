# CI & CD workflow
name: CI/CD - Liquid.Templates for Liquid Application Framework

on:
  push:
    branches: [ main, releases/v2.X.X, releases/v6.X.X ]
    paths:
    - 'templates/src/Liquid.Templates/**'
    
  pull_request:
    branches: [ main, releases/** ]
    types: [opened, synchronize, reopened]
    paths:
    - 'templates/src/Liquid.Templates/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Job Type
      run: |
        if [$GITHUB_EVENT_NAME == 'push']
        then
          echo "Starting CD Job: Build, Test, Analyze, Pack and Publish library to Nuget.org..."
        else
          echo "Starting CI Job: Build, Test and Analyze..."
        fi
    
    - name: (CI) Checkout repo on Pull Request
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/checkout@v2
      with:
        ref: ${{github.event.pull_request.head.ref}}
        repository: ${{github.event.pull_request.head.repo.full_name}}
        fetch-depth: 0 # required to eliminate shallow clone warning in Sonarcloud analysis
        
    - name: (CI/CD) Checkout repo
      if: ${{ github.event_name != 'pull_request' }}
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # required to eliminate shallow clone warning in Sonarcloud analysis
        
    - name: (CI/CD) Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.7.2
      with:
        # SDK version to use. Examples: 2.2.104, 3.1, 3.1.x
        dotnet-version: 3.1.x

    - name: (CI/CD) Restore dependencies
      run: dotnet restore templates/src/Liquid.Templates/Liquid.Templates.csproj

    - name: (CI/CD) Build and Analyze Project
      run: |
        dotnet build templates/src/Liquid.Templates/Liquid.Templates.csproj --configuration Release --no-restore
        
    - name: (CD) Nuget Pack & Push to Nuget.org
      if: ${{ github.event_name == 'push' }}
      run: |
        dotnet pack --no-build --configuration Release templates/src/Liquid.Templates/Liquid.Templates.csproj --output .
        dotnet nuget push *.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{secrets.PUBLISH_TO_NUGET_ORG}} --skip-duplicate
